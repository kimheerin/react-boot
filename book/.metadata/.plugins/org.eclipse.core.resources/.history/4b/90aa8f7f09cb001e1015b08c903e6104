	package com.khit.book.controller;
	
	import java.util.List;
	
	import org.springframework.http.HttpStatus;
	import org.springframework.http.ResponseEntity;
	import org.springframework.web.bind.annotation.GetMapping;
	import org.springframework.web.bind.annotation.PathVariable;
	import org.springframework.web.bind.annotation.PostMapping;
	import org.springframework.web.bind.annotation.RequestBody;
	import org.springframework.web.bind.annotation.RestController;
	
	import com.khit.book.entity.Book;
	import com.khit.book.service.BookService;
	
	import lombok.RequiredArgsConstructor;
	
	@RequiredArgsConstructor
	@RestController	//@Controller는 주로 웹 페이지를 반환하는 데 사용됨
					//@RestController는 RESTful API를 구현하는 데 사용되어 클라이언트에게 JSON이나 XML, 단순 문자열 형태의 데이터를 직접 반환하는 데 적합함
	public class BookController {
	
		private final BookService bookService;
		
		//ResponseEntity<?> : body + header(200, 404)
		//body에 올 수 있는 것 : String, Object
		//@RequestBody Book book - 입력 폼의 데이터(json 형태)
		@PostMapping("/book") //http://localhost:8080/book
		public ResponseEntity<?> save(@RequestBody Book book) {
			String resultText = bookService.save(book);	//String형으로 보냄
			return new ResponseEntity<>(resultText, HttpStatus.OK);	//body, header
		}
		
		//도서 목록 보기
		@GetMapping("/book") //http://localhost:8080/book
		public ResponseEntity<?> bookList(){
			List<Book> booklist = bookService.findAll();
			return new ResponseEntity<>(booklist, HttpStatus.OK);
		}
		
		//도서 상세 보기
		@GetMapping("/book/{id}") //http://localhost:8080/book/1
		public ResponseEntity<?> bookOne(@PathVariable Long id){
			Book book = bookService.findById(id);
			return new ResponseEntity<>(book, HttpStatus.OK);
		}
	}
